basePath: /api
definitions:
  adminDto.AdminInfoOutput:
    properties:
      avatar:
        type: string
      id:
        type: integer
      introduction:
        type: string
      login_time:
        type: string
      name:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  adminDto.AdminLoginInput:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  adminDto.ChangePwdInput:
    properties:
      password:
        description: 密码
        example: "123456"
        type: string
    required:
    - password
    type: object
  appDto.APPListItemOutput:
    properties:
      app_id:
        type: string
      create_at:
        type: string
      id:
        type: integer
      is_delete:
        type: integer
      name:
        type: string
      qpd:
        type: integer
      qps:
        type: integer
      real_qpd:
        type: integer
      real_qps:
        type: integer
      secret:
        type: string
      update_at:
        type: string
      white_ips:
        type: string
    type: object
  appDto.APPListOutput:
    properties:
      list:
        items:
          $ref: '#/definitions/appDto.APPListItemOutput'
        type: array
      total:
        type: integer
    type: object
  commonDto.TokensOutput:
    properties:
      access_token:
        description: access_token
        type: string
      expires_in:
        description: expires_in
        type: integer
      scope:
        description: scope
        type: string
      token_type:
        description: token_type
        type: string
    type: object
  model.AccessControl:
    properties:
      black_list:
        type: string
      clientip_flow_limit:
        type: integer
      id:
        type: integer
      open_auth:
        type: integer
      service:
        $ref: '#/definitions/model.Service'
      service_flow_limit:
        type: integer
      service_id:
        type: integer
      white_host_name:
        type: string
      white_list:
        type: string
    type: object
  model.App:
    properties:
      app_id:
        type: string
      create_at:
        type: string
      id:
        type: integer
      isDelete:
        type: integer
      name:
        type: string
      qpd:
        type: integer
      qps:
        type: integer
      secret:
        type: string
      update_at:
        type: string
      white_ips:
        type: string
    type: object
  model.GrpcRule:
    properties:
      header_transfor:
        type: string
      id:
        type: integer
      port:
        type: integer
      service:
        $ref: '#/definitions/model.Service'
      service_id:
        type: integer
    type: object
  model.HttpRule:
    properties:
      header_transfor:
        type: string
      id:
        type: integer
      need_https:
        type: integer
      need_strip_uri:
        type: integer
      need_websocket:
        type: integer
      rule:
        type: string
      rule_type:
        type: integer
      service:
        $ref: '#/definitions/model.Service'
      service_id:
        type: integer
      url_rewrite:
        type: string
    type: object
  model.LoadBalance:
    properties:
      check_interval:
        type: integer
      check_method:
        type: integer
      check_timeout:
        type: integer
      forbid_list:
        type: string
      id:
        type: integer
      ip_list:
        type: string
      round_type:
        type: integer
      service:
        $ref: '#/definitions/model.Service'
      service_id:
        type: integer
      upstream_connect_timeout:
        type: integer
      upstream_header_timeout:
        type: integer
      upstream_idle_timeout:
        type: integer
      upstream_max_idle:
        type: integer
      weight_list:
        type: string
    type: object
  model.Service:
    properties:
      create_at:
        type: string
      id:
        type: integer
      isDelete:
        type: integer
      load_type:
        type: integer
      service_desc:
        type: string
      service_name:
        type: string
      update_at:
        type: string
    type: object
  model.ServiceDetail:
    properties:
      access_control:
        $ref: '#/definitions/model.AccessControl'
      grpc_rule:
        $ref: '#/definitions/model.GrpcRule'
      http_rule:
        $ref: '#/definitions/model.HttpRule'
      info:
        $ref: '#/definitions/model.Service'
      load_balance:
        $ref: '#/definitions/model.LoadBalance'
      tcp_rule:
        $ref: '#/definitions/model.TcpRule'
    type: object
  model.TcpRule:
    properties:
      id:
        type: integer
      port:
        type: integer
      service:
        $ref: '#/definitions/model.Service'
      service_id:
        type: integer
    type: object
  public.Response:
    properties:
      data: {}
      errmsg:
        type: string
      errno:
        $ref: '#/definitions/public.ResponseCode'
      stack: {}
      trace_id: {}
    type: object
  public.ResponseCode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 401
    - 1000
    - 2001
    type: integer
    x-enum-varnames:
    - SuccessCode
    - UndefErrorCode
    - ValidErrorCode
    - InternalErrorCode
    - InvalidRequestErrorCode
    - CustomizeCode
    - GROUPALL_SAVE_FLOWERROR
  serviceDto.ServiceAddGrpcInput:
    properties:
      black_list:
        type: string
      clientip_flow_limit:
        type: integer
      forbid_list:
        type: string
      header_transfor:
        type: string
      ip_list:
        type: string
      open_auth:
        type: integer
      port:
        maximum: 8999
        minimum: 8001
        type: integer
      round_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        type: string
      weight_list:
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  serviceDto.ServiceAddHttpInput:
    properties:
      black_list:
        description: 黑名单ip
        example: ""
        type: string
      clientip_flow_limit:
        description: 客户端ip限流
        example: 0
        minimum: 0
        type: integer
      header_transfor:
        description: header转换
        example: ""
        type: string
      ip_list:
        description: ip列表
        example: 127.0.0.1:8999
        type: string
      need_https:
        description: 支持https
        example: 0
        maximum: 1
        minimum: 0
        type: integer
      need_strip_uri:
        description: 启用strip_uri
        example: 1
        maximum: 1
        minimum: 0
        type: integer
      need_websocket:
        description: 是否支持websocket
        example: 1
        maximum: 1
        minimum: 0
        type: integer
      open_auth:
        description: 关键词
        example: 1
        maximum: 1
        minimum: 0
        type: integer
      round_type:
        description: 轮询方式
        example: 1
        maximum: 3
        minimum: 0
        type: integer
      rule:
        description: 域名或者前缀s
        example: /test
        type: string
      rule_type:
        description: 接入类型
        example: 0
        maximum: 1
        minimum: 0
        type: integer
      service_desc:
        description: 服务描述
        example: test
        maxLength: 255
        minLength: 1
        type: string
      service_flow_limit:
        description: 服务端限流
        example: 0
        minimum: 0
        type: integer
      service_name:
        description: 服务名
        example: test
        type: string
      upstream_connect_timeout:
        description: 建立连接超时, 单位s
        example: 0
        minimum: 0
        type: integer
      upstream_header_timeout:
        description: 获取header超时, 单位s
        example: 0
        minimum: 0
        type: integer
      upstream_idle_timeout:
        description: 链接最大空闲时间, 单位s
        example: 0
        minimum: 0
        type: integer
      upstream_max_idle:
        example: 0
        minimum: 0
        type: integer
      url_rewrite:
        description: url重写功能
        example: ""
        type: string
      weight_list:
        description: 权重列表
        example: "1"
        type: string
      white_list:
        description: 白名单ip
        example: ""
        type: string
    required:
    - ip_list
    - rule
    - service_desc
    - service_name
    - weight_list
    type: object
  serviceDto.ServiceAddTcpInput:
    properties:
      black_list:
        type: string
      clientip_flow_limit:
        type: integer
      forbid_list:
        type: string
      header_transfor:
        type: string
      ip_list:
        example: 127.0.0.0:81
        type: string
      open_auth:
        type: integer
      port:
        example: 10234
        maximum: 8999
        minimum: 8001
        type: integer
      round_type:
        example: 1
        type: integer
      service_desc:
        example: test_tcp_3_23_desc
        type: string
      service_flow_limit:
        type: integer
      service_name:
        example: test_tcp_3_23
        type: string
      weight_list:
        example: "1"
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  serviceDto.ServiceListItemOutput:
    properties:
      createAt:
        type: string
      id:
        description: id
        type: integer
      load_type:
        description: 类型
        type: integer
      qpd:
        description: qpd
        type: integer
      qps:
        description: qps
        type: integer
      service_addr:
        description: 服务地址
        type: string
      service_desc:
        description: 服务描述
        type: string
      service_name:
        description: 服务名称
        type: string
      total_node:
        description: 节点数
        type: integer
      updateAt:
        type: string
    type: object
  serviceDto.ServiceListOutput:
    properties:
      list:
        items:
          $ref: '#/definitions/serviceDto.ServiceListItemOutput'
        type: array
      total:
        type: integer
    type: object
host: localhost:8880
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go-Gateway  API
  version: "1.0"
paths:
  /admin/change_pwd:
    post:
      consumes:
      - application/json
      description: 修改密码
      operationId: /admin/change_pwd
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/adminDto.ChangePwdInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 修改密码
      tags:
      - Admin
  /admin/info:
    get:
      consumes:
      - application/json
      description: 管理员信息
      operationId: /admin/info
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  $ref: '#/definitions/adminDto.AdminInfoOutput'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 管理员信息
      tags:
      - Admin
  /admin_login/login:
    post:
      consumes:
      - application/json
      description: 管理员登陆
      operationId: /admin_login/login
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/adminDto.AdminLoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  $ref: '#/definitions/commonDto.TokensOutput'
              type: object
      summary: 管理员登陆
      tags:
      - Admin
  /app:
    get:
      consumes:
      - application/json
      description: 租户列表
      operationId: /app
      parameters:
      - description: 关键词
        in: query
        name: info
        type: string
      - description: 每页多少条
        in: query
        name: page_size
        required: true
        type: string
      - description: 页码
        in: query
        name: page_no
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  $ref: '#/definitions/appDto.APPListOutput'
              type: object
      summary: 租户列表
      tags:
      - App
  /app/{app_id}:
    delete:
      consumes:
      - application/json
      description: 删除租户
      operationId: /app/{app_id}/delete
      parameters:
      - description: 服务id
        in: path
        name: app_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 删除租户
      tags:
      - App
    get:
      consumes:
      - application/json
      description: 租户详情
      operationId: /app/{app_id}/get
      parameters:
      - description: 服务id
        in: path
        name: app_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.App'
              type: object
      summary: 租户详情
      tags:
      - App
  /service:
    get:
      consumes:
      - application/json
      description: 服务列表
      operationId: /service
      parameters:
      - description: 关键词
        in: query
        name: info
        type: string
      - description: 每页个数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 当前页数
        in: query
        name: page_no
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  $ref: '#/definitions/serviceDto.ServiceListOutput'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 服务列表
      tags:
      - Service
  /service/{service_id}:
    delete:
      consumes:
      - application/json
      description: 服务删除
      operationId: /service/{service_id}
      parameters:
      - description: 服务ID
        in: path
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 服务删除
      tags:
      - Service
    get:
      consumes:
      - application/json
      description: 服务列表
      operationId: /service/{service_id}
      parameters:
      - description: 服务id
        in: path
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ServiceDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 服务详情
      tags:
      - Service
  /service/grpc:
    post:
      consumes:
      - application/json
      description: 创建 grpc 服务
      operationId: /service/grpc
      parameters:
      - description: body
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/serviceDto.ServiceAddGrpcInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建 grpc 服务
      tags:
      - Service
  /service/grpc/{service_id}:
    patch:
      consumes:
      - application/json
      description: 更新 grpc 服务
      operationId: /service/grpc/{service_id}
      parameters:
      - description: 服务id
        in: path
        name: service_id
        required: true
        type: string
      - description: body
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/serviceDto.ServiceAddGrpcInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新 grpc 服务
      tags:
      - Service
  /service/http:
    post:
      consumes:
      - application/json
      description: 创建 http 服务
      operationId: /service/http
      parameters:
      - description: body
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/serviceDto.ServiceAddHttpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建 http 服务
      tags:
      - Service
  /service/http/{service_id}:
    patch:
      consumes:
      - application/json
      description: 更新 http 服务
      operationId: /service/http/{service_id}
      parameters:
      - description: 服务id
        in: path
        name: service_id
        required: true
        type: string
      - description: body
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/serviceDto.ServiceAddHttpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新 http 服务
      tags:
      - Service
  /service/tcp:
    post:
      consumes:
      - application/json
      description: 创建 tcp 服务
      operationId: /service/tcp
      parameters:
      - description: body
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/serviceDto.ServiceAddTcpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建 tcp 服务
      tags:
      - Service
  /service/tcp/{service_id}:
    patch:
      consumes:
      - application/json
      description: 更新 tcp 服务
      operationId: /service/tcp/{service_id}
      parameters:
      - description: 服务id
        in: path
        name: service_id
        required: true
        type: string
      - description: body
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/serviceDto.ServiceAddTcpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/public.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新 tcp 服务
      tags:
      - Service
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
